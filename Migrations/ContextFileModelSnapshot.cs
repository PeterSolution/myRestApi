// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerApi.Context;

#nullable disable

namespace ServerApi.Migrations
{
    [DbContext(typeof(ContextFile))]
    partial class ContextFileModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ServerApi.Models.ChatDbModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("chatid")
                        .HasColumnType("int");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ChatDbModel");
                });

            modelBuilder.Entity("ServerApi.Models.ChatForWho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("forwho")
                        .HasColumnType("int");

                    b.Property<int>("idchat")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("chatForWho");
                });

            modelBuilder.Entity("ServerApi.Models.DataDbModel", b =>
                {
                    b.Property<int>("iddata")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("iddata"));

                    b.Property<string>("createuser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iddata");

                    b.ToTable("Data");
                });

            modelBuilder.Entity("ServerApi.Models.HideDbModel", b =>
                {
                    b.Property<int>("idhide")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idhide"));

                    b.Property<bool>("hide")
                        .HasColumnType("bit");

                    b.Property<int>("iddata")
                        .HasColumnType("int");

                    b.Property<int>("iduser")
                        .HasColumnType("int");

                    b.HasKey("idhide");

                    b.ToTable("HideDbModel");
                });

            modelBuilder.Entity("ServerApi.Models.NotificationDbModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("iddata")
                        .HasColumnType("int");

                    b.Property<int>("idduser")
                        .HasColumnType("int");

                    b.Property<bool>("isseen")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("ServerApi.Models.UserDbModel", b =>
                {
                    b.Property<int>("idduser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idduser"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idduser");

                    b.ToTable("User");
                });
#pragma warning restore 612, 618
        }
    }
}
